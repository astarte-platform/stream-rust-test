# This file is part of Astarte.
#
# Copyright 2024 SECO Mind Srl
#
# SPDX-License-Identifier: Apache-2.0

name: test
on:
  workflow_call:
  workflow_dispatch:
permissions:
  contents: read
env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"
  # Enable logging otherwise the logging lines will count as not covered in the test coverage
  RUST_LOG: trace
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run cargo test --locked
        run: cargo test --locked --all-features --all-targets --workspace
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable / vcpkg
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      # Setup vcpkg binary cache
      # https://learn.microsoft.com/en-us/vcpkg/users/binarycaching#gha-quickstart
      - uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Set VCPKG_ROOT
        run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Install dependencies
        run: vcpkg install --binarysource="clear;x-gha,readwrite" openssl:x64-windows-static-md sqlite3
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets --workspace
